{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/bruno/Projects/blog/src/components/New/index.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport firebase from '../../firebase';\nimport './new.css';\n\nclass New extends Component {\n  constructor(props) {\n    super(props);\n\n    this.cadastrar = async e => {\n      e.preventDefault();\n\n      if (this.state.titulo !== '' && this.state.imagem !== '' && this.state.descricao !== '') {\n        let posts = firebase.app.ref('posts');\n        let chave = posts.push().key;\n        await posts.child(chave).set({\n          titulo: this.state.titulo,\n          imagem: this.state.imagem,\n          descrição: this.state.descricao,\n          autor: localStorage.nome\n        });\n        this.props.history.push('/dashboard');\n      } else {\n        this.setState({\n          alert: 'Preencha todos os campos!'\n        });\n      }\n    };\n\n    this.state = {\n      titulo: '',\n      descricao: '',\n      imagem: '',\n      alert: ''\n    };\n    this.cadastrar = this.cadastrar.bind(this);\n    this.handleFile = this.handleFile.bind(this);\n  }\n\n  componentDidMount() {\n    if (!firebase.getCurrent()) {\n      this.props.history.replace('/');\n      return null;\n    }\n  }\n\n  handleFile(e) {\n    const image = e.target.files[0];\n    console.log(image);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        id: \"new\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/dashboard\",\n          children: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.cadastrar,\n        id: \"new-post\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.handleFile()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 56\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: this.state.alert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Titulo: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Digite o titulo\",\n          value: this.state.nome,\n          autoFocus: true,\n          onChange: e => this.setState({\n            titulo: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 87\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Descri\\xE7\\xE3o: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          placeholder: \"Alguma descri\\xE7\\xE3o...\",\n          value: this.state.descricao,\n          onChange: e => this.setState({\n            descricao: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 90\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Cadastrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(New);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/bruno/Projects/blog/src/components/New/index.js"],"names":["React","Component","Link","withRouter","firebase","New","constructor","props","cadastrar","e","preventDefault","state","titulo","imagem","descricao","posts","app","ref","chave","push","key","child","set","descrição","autor","localStorage","nome","history","setState","alert","bind","handleFile","componentDidMount","getCurrent","replace","image","target","files","console","log","render","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport firebase from '../../firebase';\nimport './new.css';\n\n\nclass New extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            titulo: '',\n            descricao: '',\n            imagem: '',\n            alert: ''\n        }\n\n        this.cadastrar = this.cadastrar.bind(this);\n        this.handleFile = this.handleFile.bind(this);\n\n    }\n\n    componentDidMount() {\n        if (!firebase.getCurrent()) {\n            this.props.history.replace('/')\n            return null\n        }\n    }\n\n    handleFile(e) {\n        const image = e.target.files[0];\n        console.log(image)\n    }\n\n    cadastrar = async (e) => {\n        e.preventDefault();\n        if (this.state.titulo !== '' && this.state.imagem !== '' && this.state.descricao !== '') {\n            let posts = firebase.app.ref('posts');\n            let chave = posts.push().key;\n            await posts.child(chave).set({\n                titulo: this.state.titulo,\n                imagem: this.state.imagem,\n                descrição: this.state.descricao,\n                autor: localStorage.nome\n            });\n\n            this.props.history.push('/dashboard');\n\n        } else {\n            this.setState({ alert: 'Preencha todos os campos!' })\n        }\n\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <header id='new'><Link to='/dashboard'>Voltar</Link></header>\n                <form onSubmit={this.cadastrar} id='new-post'>\n\n                    <input type='file'\n                        onChange={this.handleFile()} /><br />\n\n                    <span>{this.state.alert}</span>\n                    <label>Titulo: </label><br />\n                    <input type='text' placeholder='Digite o titulo' value={this.state.nome} autoFocus\n                        onChange={(e) => this.setState({ titulo: e.target.value })} /><br />\n\n\n\n                    <label>Descrição: </label><br />\n                    <textarea type='text' placeholder='Alguma descrição...' value={this.state.descricao}\n                        onChange={(e) => this.setState({ descricao: e.target.value })} /><br />\n\n                    <button type='submit'>Cadastrar</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(New);"]},"metadata":{},"sourceType":"module"}