{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/bruno/Projects/blog/src/components/New/index.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport firebase from '../../firebase';\nimport './new.css';\n\nclass New extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFile = async e => {\n      if (e.target.files[0]) {\n        const image = e.target.files[0];\n\n        if (image.type === \"image/png\" || image.type === \"image/jpeg\") {\n          await this.setState({\n            imagem: image\n          });\n          this.handleUpload();\n        } else {\n          alert('envie uma imagem do tipo PNG ou JPG');\n          this.setState({\n            iamgem: null\n          });\n          return null;\n        }\n      }\n    };\n\n    this.handleUpload = async () => {\n      const {\n        imagem\n      } = this.state;\n      const currentUid = firebase.getCurrentUid();\n      console.log(currentUid);\n    };\n\n    this.cadastrar = async e => {\n      e.preventDefault();\n\n      if (this.state.titulo !== '' && this.state.imagem !== '' && this.state.descricao !== '') {\n        let posts = firebase.app.ref('posts');\n        let chave = posts.push().key;\n        await posts.child(chave).set({\n          titulo: this.state.titulo,\n          imagem: this.state.imagem,\n          descrição: this.state.descricao,\n          autor: localStorage.nome\n        });\n        this.props.history.push('/dashboard');\n      } else {\n        this.setState({\n          alert: 'Preencha todos os campos!'\n        });\n      }\n    };\n\n    this.state = {\n      titulo: '',\n      descricao: '',\n      imagem: '',\n      alert: ''\n    };\n    this.cadastrar = this.cadastrar.bind(this);\n    this.handleFile = this.handleFile.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  componentDidMount() {\n    if (!firebase.getCurrent()) {\n      this.props.history.replace('/');\n      return null;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        id: \"new\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/dashboard\",\n          children: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.cadastrar,\n        id: \"new-post\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.handleFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 54\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: this.state.alert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Titulo: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Digite o titulo\",\n          value: this.state.nome,\n          autoFocus: true,\n          onChange: e => this.setState({\n            titulo: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 87\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Descri\\xE7\\xE3o: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          placeholder: \"Alguma descri\\xE7\\xE3o...\",\n          value: this.state.descricao,\n          onChange: e => this.setState({\n            descricao: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 90\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Cadastrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(New);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/bruno/Projects/blog/src/components/New/index.js"],"names":["React","Component","Link","withRouter","firebase","New","constructor","props","handleFile","e","target","files","image","type","setState","imagem","handleUpload","alert","iamgem","state","currentUid","getCurrentUid","console","log","cadastrar","preventDefault","titulo","descricao","posts","app","ref","chave","push","key","child","set","descrição","autor","localStorage","nome","history","bind","componentDidMount","getCurrent","replace","render","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport firebase from '../../firebase';\nimport './new.css';\n\n\nclass New extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            titulo: '',\n            descricao: '',\n            imagem: '',\n            alert: ''\n        }\n\n        this.cadastrar = this.cadastrar.bind(this);\n        this.handleFile = this.handleFile.bind(this);\n        this.handleUpload = this.handleUpload.bind(this);\n\n    }\n\n    componentDidMount() {\n        if (!firebase.getCurrent()) {\n            this.props.history.replace('/')\n            return null\n        }\n    }\n\n    handleFile = async (e) => {\n        if (e.target.files[0]) {\n\n            const image = e.target.files[0];\n\n            if (image.type === \"image/png\" || image.type === \"image/jpeg\") {\n                await this.setState({ imagem: image })\n                this.handleUpload();\n\n            } else {\n                alert('envie uma imagem do tipo PNG ou JPG')\n                this.setState({ iamgem: null });\n                return null;\n            }\n\n        }\n\n    }\n\n    handleUpload = async () => {\n\n        const { imagem } = this.state;\n        const currentUid = firebase.getCurrentUid();\n\n        console.log(currentUid);\n\n    }\n\n    cadastrar = async (e) => {\n        e.preventDefault();\n        if (this.state.titulo !== '' && this.state.imagem !== '' && this.state.descricao !== '') {\n            let posts = firebase.app.ref('posts');\n            let chave = posts.push().key;\n            await posts.child(chave).set({\n                titulo: this.state.titulo,\n                imagem: this.state.imagem,\n                descrição: this.state.descricao,\n                autor: localStorage.nome\n            });\n\n            this.props.history.push('/dashboard');\n\n        } else {\n            this.setState({ alert: 'Preencha todos os campos!' })\n        }\n\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <header id='new'><Link to='/dashboard'>Voltar</Link></header>\n                <form onSubmit={this.cadastrar} id='new-post'>\n\n                    <input type='file'\n                        onChange={this.handleFile} /><br />\n\n                    <span>{this.state.alert}</span>\n                    <label>Titulo: </label><br />\n                    <input type='text' placeholder='Digite o titulo' value={this.state.nome} autoFocus\n                        onChange={(e) => this.setState({ titulo: e.target.value })} /><br />\n\n\n\n                    <label>Descrição: </label><br />\n                    <textarea type='text' placeholder='Alguma descrição...' value={this.state.descricao}\n                        onChange={(e) => this.setState({ descricao: e.target.value })} /><br />\n\n                    <button type='submit'>Cadastrar</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(New);"]},"metadata":{},"sourceType":"module"}