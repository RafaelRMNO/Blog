{"ast":null,"code":"import app from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\nlet firebaseConfig = {\n  apiKey: \"AIzaSyCbdHXiBdfDSSwXw1dh3XU62AH8nX-DGJA\",\n  authDomain: \"brechoapp-a7b4a.firebaseapp.com\",\n  databaseURL: \"https://brechoapp-a7b4a.firebaseio.com\",\n  projectId: \"brechoapp-a7b4a\",\n  storageBucket: \"brechoapp-a7b4a.appspot.com\",\n  messagingSenderId: \"159787734903\",\n  appId: \"1:159787734903:web:db3a06ff890effb6ec3372\",\n  measurementId: \"G-VY8FLGX3VX\"\n};\n\nclass Firebase {\n  constructor() {\n    if (!app.apps.length) {\n      app.initializeApp(firebaseConfig);\n    }\n\n    this.app = app.database();\n  }\n\n  login(email, password) {\n    return app.auth().signInWithEmailAndPassword(email, password);\n  }\n\n  async register(email, password, nome) {\n    await app.auth().signInWithEmailAndPassword(email, password);\n    const uid = app.auth().currentUser.uid;\n    return;\n    app.database().ref('usuarios').child(uid).set({\n      nome: nome\n    });\n  }\n\n  isInitialized() {\n    return new Promise(resolve => {\n      app.auth().onAuthStateChanged(resolve);\n    });\n  }\n\n  getCurrent() {\n    return app.auth().currentUser && app.auth.currentUser.email;\n  }\n\n}\n\nexport default new Firebase();","map":{"version":3,"sources":["/home/bruno/Projects/blog/src/firebase.js"],"names":["app","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","constructor","apps","length","initializeApp","database","login","email","password","auth","signInWithEmailAndPassword","register","nome","uid","currentUser","ref","child","set","isInitialized","Promise","resolve","onAuthStateChanged","getCurrent"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,mBAAP;AACA,OAAO,eAAP;AAEA,IAAIC,cAAc,GAAG;AACjBC,EAAAA,MAAM,EAAE,yCADS;AAEjBC,EAAAA,UAAU,EAAE,iCAFK;AAGjBC,EAAAA,WAAW,EAAE,wCAHI;AAIjBC,EAAAA,SAAS,EAAE,iBAJM;AAKjBC,EAAAA,aAAa,EAAE,6BALE;AAMjBC,EAAAA,iBAAiB,EAAE,cANF;AAOjBC,EAAAA,KAAK,EAAE,2CAPU;AAQjBC,EAAAA,aAAa,EAAE;AARE,CAArB;;AAYA,MAAMC,QAAN,CAAe;AACXC,EAAAA,WAAW,GAAG;AACV,QAAI,CAACX,GAAG,CAACY,IAAJ,CAASC,MAAd,EAAsB;AAClBb,MAAAA,GAAG,CAACc,aAAJ,CAAkBb,cAAlB;AACH;;AAED,SAAKD,GAAL,GAAWA,GAAG,CAACe,QAAJ,EAAX;AACH;;AAKDC,EAAAA,KAAK,CAACC,KAAD,EAAQC,QAAR,EAAkB;AACnB,WAAQlB,GAAG,CAACmB,IAAJ,GAAWC,0BAAX,CAAsCH,KAAtC,EAA6CC,QAA7C,CAAR;AAGH;;AAED,QAAMG,QAAN,CAAeJ,KAAf,EAAsBC,QAAtB,EAAgCI,IAAhC,EAAsC;AAElC,UAAMtB,GAAG,CAACmB,IAAJ,GAAWC,0BAAX,CAAsCH,KAAtC,EAA6CC,QAA7C,CAAN;AAEA,UAAMK,GAAG,GAAGvB,GAAG,CAACmB,IAAJ,GAAWK,WAAX,CAAuBD,GAAnC;AACA;AACAvB,IAAAA,GAAG,CAACe,QAAJ,GAAeU,GAAf,CAAmB,UAAnB,EAA+BC,KAA/B,CAAqCH,GAArC,EAA0CI,GAA1C,CAA8C;AAC1CL,MAAAA,IAAI,EAAEA;AADoC,KAA9C;AAGH;;AAEDM,EAAAA,aAAa,GAAG;AACZ,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC1B9B,MAAAA,GAAG,CAACmB,IAAJ,GAAWY,kBAAX,CAA8BD,OAA9B;AACH,KAFM,CAAP;AAGH;;AAEDE,EAAAA,UAAU,GAAG;AACT,WAAOhC,GAAG,CAACmB,IAAJ,GAAWK,WAAX,IAA0BxB,GAAG,CAACmB,IAAJ,CAASK,WAAT,CAAqBP,KAAtD;AACH;;AArCU;;AAyCf,eAAe,IAAIP,QAAJ,EAAf","sourcesContent":["import app from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nlet firebaseConfig = {\n    apiKey: \"AIzaSyCbdHXiBdfDSSwXw1dh3XU62AH8nX-DGJA\",\n    authDomain: \"brechoapp-a7b4a.firebaseapp.com\",\n    databaseURL: \"https://brechoapp-a7b4a.firebaseio.com\",\n    projectId: \"brechoapp-a7b4a\",\n    storageBucket: \"brechoapp-a7b4a.appspot.com\",\n    messagingSenderId: \"159787734903\",\n    appId: \"1:159787734903:web:db3a06ff890effb6ec3372\",\n    measurementId: \"G-VY8FLGX3VX\"\n};\n\n\nclass Firebase {\n    constructor() {\n        if (!app.apps.length) {\n            app.initializeApp(firebaseConfig);\n        }\n\n        this.app = app.database()\n    }\n\n\n\n\n    login(email, password) {\n        return (app.auth().signInWithEmailAndPassword(email, password))\n\n\n    }\n\n    async register(email, password, nome) {\n\n        await app.auth().signInWithEmailAndPassword(email, password)\n\n        const uid = app.auth().currentUser.uid;\n        return\n        app.database().ref('usuarios').child(uid).set({\n            nome: nome\n        })\n    }\n\n    isInitialized() {\n        return new Promise(resolve => {\n            app.auth().onAuthStateChanged(resolve);\n        })\n    }\n\n    getCurrent() {\n        return app.auth().currentUser && app.auth.currentUser.email\n    }\n\n}\n\nexport default new Firebase();"]},"metadata":{},"sourceType":"module"}